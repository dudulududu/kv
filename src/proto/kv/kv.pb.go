// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kv.proto

package kv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandArg struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Op                   string   `protobuf:"bytes,3,opt,name=Op,proto3" json:"Op,omitempty"`
	Cid                  int64    `protobuf:"varint,4,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Seq                  int32    `protobuf:"varint,5,opt,name=Seq,proto3" json:"Seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandArg) Reset()         { *m = CommandArg{} }
func (m *CommandArg) String() string { return proto.CompactTextString(m) }
func (*CommandArg) ProtoMessage()    {}
func (*CommandArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{0}
}

func (m *CommandArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandArg.Unmarshal(m, b)
}
func (m *CommandArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandArg.Marshal(b, m, deterministic)
}
func (m *CommandArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandArg.Merge(m, src)
}
func (m *CommandArg) XXX_Size() int {
	return xxx_messageInfo_CommandArg.Size(m)
}
func (m *CommandArg) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandArg.DiscardUnknown(m)
}

var xxx_messageInfo_CommandArg proto.InternalMessageInfo

func (m *CommandArg) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CommandArg) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CommandArg) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *CommandArg) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *CommandArg) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type CommandReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=Err,proto3" json:"Err,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandReply) Reset()         { *m = CommandReply{} }
func (m *CommandReply) String() string { return proto.CompactTextString(m) }
func (*CommandReply) ProtoMessage()    {}
func (*CommandReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{1}
}

func (m *CommandReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandReply.Unmarshal(m, b)
}
func (m *CommandReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandReply.Marshal(b, m, deterministic)
}
func (m *CommandReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandReply.Merge(m, src)
}
func (m *CommandReply) XXX_Size() int {
	return xxx_messageInfo_CommandReply.Size(m)
}
func (m *CommandReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommandReply proto.InternalMessageInfo

func (m *CommandReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *CommandReply) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*CommandArg)(nil), "kv.CommandArg")
	proto.RegisterType((*CommandReply)(nil), "kv.CommandReply")
}

func init() { proto.RegisterFile("kv.proto", fileDescriptor_2216fe83c9c12408) }

var fileDescriptor_2216fe83c9c12408 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0x2e, 0xd3, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0x2e, 0x53, 0xca, 0xe0, 0xe2, 0x72, 0xce, 0xcf, 0xcd,
	0x4d, 0xcc, 0x4b, 0x71, 0x2c, 0x4a, 0x17, 0x12, 0xe0, 0x62, 0xf6, 0x4e, 0xad, 0x94, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x85, 0x44, 0xb8, 0x58, 0xc3, 0x12, 0x73, 0x4a, 0x53, 0x25,
	0x98, 0xc0, 0x62, 0x10, 0x8e, 0x10, 0x1f, 0x17, 0x93, 0x7f, 0x81, 0x04, 0x33, 0x58, 0x88, 0xc9,
	0xbf, 0x00, 0xa4, 0xcf, 0x39, 0x33, 0x45, 0x82, 0x45, 0x81, 0x51, 0x83, 0x39, 0x08, 0xc4, 0x04,
	0x89, 0x04, 0xa7, 0x16, 0x4a, 0xb0, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x81, 0x98, 0x4a, 0x66, 0x5c,
	0x3c, 0x50, 0x9b, 0x82, 0x52, 0x0b, 0x72, 0x2a, 0x41, 0x2a, 0x5c, 0x8b, 0x8a, 0x60, 0x76, 0xb9,
	0x16, 0x15, 0x61, 0xb7, 0xcb, 0x28, 0x81, 0x8b, 0xc9, 0x3b, 0x4c, 0x48, 0x93, 0x8b, 0xd9, 0x3d,
	0xb5, 0x44, 0x88, 0x4f, 0x2f, 0xbb, 0x4c, 0x0f, 0xe1, 0x60, 0x29, 0x01, 0x24, 0x3e, 0xd8, 0x58,
	0x25, 0x06, 0x21, 0x7d, 0x2e, 0xce, 0x80, 0xd2, 0x12, 0xc7, 0x82, 0x82, 0xd4, 0xbc, 0x14, 0x62,
	0x34, 0x38, 0xb1, 0x44, 0x31, 0x65, 0x97, 0x25, 0xb1, 0x81, 0x03, 0xc5, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x6f, 0xa0, 0x7a, 0xe1, 0x20, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	Get(ctx context.Context, in *CommandArg, opts ...grpc.CallOption) (*CommandReply, error)
	PutAppend(ctx context.Context, in *CommandArg, opts ...grpc.CallOption) (*CommandReply, error)
}

type kVClient struct {
	cc *grpc.ClientConn
}

func NewKVClient(cc *grpc.ClientConn) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) Get(ctx context.Context, in *CommandArg, opts ...grpc.CallOption) (*CommandReply, error) {
	out := new(CommandReply)
	err := c.cc.Invoke(ctx, "/kv.KV/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutAppend(ctx context.Context, in *CommandArg, opts ...grpc.CallOption) (*CommandReply, error) {
	out := new(CommandReply)
	err := c.cc.Invoke(ctx, "/kv.KV/PutAppend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
type KVServer interface {
	Get(context.Context, *CommandArg) (*CommandReply, error)
	PutAppend(context.Context, *CommandArg) (*CommandReply, error)
}

// UnimplementedKVServer can be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (*UnimplementedKVServer) Get(ctx context.Context, req *CommandArg) (*CommandReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedKVServer) PutAppend(ctx context.Context, req *CommandArg) (*CommandReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAppend not implemented")
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	s.RegisterService(&_KV_serviceDesc, srv)
}

func _KV_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Get(ctx, req.(*CommandArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutAppend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutAppend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.KV/PutAppend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutAppend(ctx, req.(*CommandArg))
	}
	return interceptor(ctx, in, info, handler)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kv.KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _KV_Get_Handler,
		},
		{
			MethodName: "PutAppend",
			Handler:    _KV_PutAppend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}
